# Generated by Django 4.2.6 on 2023-10-19 20:50

import autogen.agentchat.assistant_agent
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "conversation_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("agents", models.JSONField()),
                ("users", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Knowledge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_outdated", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Library",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(null=True)),
                (
                    "coords",
                    models.JSONField(default=list, verbose_name="Spatial Coordinates"),
                ),
                ("name", models.CharField(max_length=200)),
                ("location", models.CharField(max_length=200)),
                ("database", models.JSONField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LibraryAgent",
            fields=[
                ("agent_id", models.UUIDField(primary_key=True, serialize=False)),
                ("age", models.PositiveIntegerField()),
                ("clearance", models.JSONField(default=dict)),
                ("bank_balance", models.FloatField(default=0.0)),
            ],
            options={
                "abstract": False,
            },
            bases=(autogen.agentchat.assistant_agent.AssistantAgent, models.Model),
        ),
        migrations.CreateModel(
            name="LibraryManager",
            fields=[
                ("agent_id", models.UUIDField(primary_key=True, serialize=False)),
                ("age", models.PositiveIntegerField()),
                ("clearance", models.JSONField(default=dict)),
                ("bank_balance", models.FloatField(default=0.0)),
            ],
            options={
                "abstract": False,
            },
            bases=(autogen.agentchat.assistant_agent.AssistantAgent, models.Model),
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "message_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Library.conversation",
                    ),
                ),
            ],
        ),
    ]
